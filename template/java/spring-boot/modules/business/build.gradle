plugins {
    id 'org.springframework.boot' version "${springBoot}"
    id 'io.spring.dependency-management' version "${springDependencyManagement}"
    id 'jacoco'
}

apply from: "jacoco.gradle"

bootJar {
    enabled = false
}

jar {
    enabled = true
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

dependencies {
    implementation "hu.kzsolt.storesync:common:${commonVersion}"
    implementation project(':modules:interface')

    //    Use lombok before mapstruct
    compileOnly  "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${openfeign}"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.rest-assured:xml-path:4.2.0'
    testImplementation 'io.rest-assured:spring-mock-mvc'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
